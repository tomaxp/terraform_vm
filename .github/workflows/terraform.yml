name: Terraform and pfSense Automation

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout repozytorium
        uses: actions/checkout@v2

      - name: List files in repository after checkout
        run: ls -la

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: |
          terraform apply \
          -var=host="${{ secrets.XEN_URL }}" \
          -var=username="${{ secrets.XEN_USERNAME }}" \
          -var=password='${{ secrets.XEN_PASSWORD }}' \
          -var-file="vars.tfvars" \
          -auto-approve \
          -lock=false

  find_unused_ip:
    runs-on: self-hosted
    needs: deploy
    steps:
      - name: Setup Python virtual environment
        run: |
         python3 -m venv venv
          source venv/bin/activate
          pip install requests beautifulsoup4 ipaddress  
            
      - name: Checkout repozytorium
        uses: actions/checkout@v2

      - name: List files in repository after checkout
        run: ls -la

      - name: Run get_unused_ip.py to find first available IP
        id: get_ip
        run: |
          python3 ./.scripts/get_unused_ip.py \
          https://192.168.101.1/index.php \
          https://192.168.101.1/services_dhcp.php \
          ${{ secrets.PFSENSE_USERNAME }} \
          ${{ secrets.PFSENSE_PASSWORD }} > unused_ip.txt

      - name: Parse the first available IP
        id: parse_ip
        run: |
          AVAILABLE_IP=$(head -n 1 unused_ip.txt)
          echo "First available IP: $AVAILABLE_IP"
          echo "::set-output name=ip::$AVAILABLE_IP"
